% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cylinderFits.R
\name{least.sq.cylinder}
\alias{least.sq.cylinder}
\title{Fit a cylinder to a point cloud using least squares}
\usage{
least.sq.cylinder(
  P,
  init = NULL,
  select_n = 20,
  max.iter = 10,
  opt.method = "Nelder-Mead",
  rmse.threshold = 0.001,
  m.estimator = "tukey"
)
}
\arguments{
\item{P}{A matrix where each row represents a point in 3D space.}

\item{init}{An initial guess for the parameters of the cylinder. If NULL, an initial guess is computed.}

\item{select_n}{The number of points to randomly select from P for the estimation. Default is 20.}

\item{max.iter}{The maximum number of iterations for the optimization algorithm. Default is 10.}

\item{opt.method}{The optimization method to use. Default is 'Nelder-Mead'.}

\item{rmse.threshold}{The threshold for the root mean square error (RMSE) for the optimization algorithm to stop. Default is 0.001.}

\item{m.estimator}{The type of M-estimator to use for robust estimation. Default is 'tukey'.}
}
\value{
A named vector with six elements: The estimated parameters of the cylinder (rho, theta, phi, alpha, radius) and the root mean square error (rmse) of the distances from the points to the cylinder.
}
\description{
This function fits a cylinder to a point cloud using a least squares approach. It also uses a robust estimator to handle outliers in the data.
}
\examples{
 \dontrun{
# Define the cylinder attributes
npts = 500
cyl_length = 0.5
radius = 0.2718

# Generate the X,Y,Z values
Z=runif(n = n, min = 0, max = cyl_length)
angs = runif(n, 0, 2*pi)
X = sin(angs)*radius
Y = cos(angs)*radius

# Creation of a LAS object out of external data
cloud <- LAS(data.frame(X,Y,Z))

# Fit a cylinder and retrun the information
cyl_par = least.sq.cylinder(cloud, select_n=20, max.iter=10, opt.method='Nelder-Mead', rmse.threshold=0.001, m.estimator='tukey')
}
}
